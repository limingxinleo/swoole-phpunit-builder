on: [ 'push', 'pull_request' ]

name: Build PHPUnit

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
  phpunit:
    name: Build PHPUnit for Swoole
    runs-on: ubuntu-latest
    needs: release
    env:
      PHPUNIT_VERSION: '9.5.4'
      SW_VERSION: '4.6.4'
      PHP_VERSION: '7.4'
      PHP_EXTENSIONS: dom, json, libxml, mbstring, pdo_sqlite, soap, xml, xmlwriter, redis, pdo, pdo_mysql
      PHP_INI_VALUES: assert.exception=1, phar.readonly=0, zend.assertions=1
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: ${{ env.PHP_INI_VALUES }}
      - name: Install java
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Download PHPUnit
        run: |
          git clone --branch ${PHPUNIT_VERSION} --depth 1 https://github.com/sebastianbergmann/phpunit.git build
      - name: Setup Swoole
        run: |
          sudo apt-get install libcurl4-openssl-dev
          wget https://github.com/swoole/swoole-src/archive/v${SW_VERSION}.tar.gz -O swoole.tar.gz
          mkdir -p swoole
          tar -xf swoole.tar.gz -C swoole --strip-components=1
          rm swoole.tar.gz
          cd swoole
          phpize
          ./configure --enable-openssl --enable-http2 --enable-swoole-curl --enable-swoole-json
          make -j$(nproc)
          sudo make install
          sudo sh -c "echo extension=swoole > /etc/php/${{ env.PHP_VERSION }}/cli/conf.d/swoole.ini"
          sudo sh -c "echo swoole.use_shortname='Off' >> /etc/php/${{ env.PHP_VERSION }}/cli/conf.d/swoole.ini"
          php --ri swoole
      - name: Generate PHPUnit Stub
        run: |
#          composer update -o
#          php bin/hyperf.php gen:phpunit
          cp -rf ./binary-phar-autoload.php.in ./build/build/templates/binary-phar-autoload.php.in
      - name: Build PHAR
        run: |
          cd build
          ant phar-nightly
#          ant unscoped-phar-nightly
          cp ./build/artifacts/phpunit-nightly.phar ../phpunit.phar
#      - name: Run Test
#        run: |
#          sudo rm /etc/php/${{ env.PHP_VERSION }}/cli/conf.d/20-xdebug.ini
#          ./phpunit.phar
      - name: Release and Upload Assets
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release_upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./phpunit.phar
          asset_name: phpunit.phar
          asset_content_type: application/octet-stream
